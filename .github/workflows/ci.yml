name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: macos-15
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List Xcode installations
      run: ls -l /Applications | grep Xcode
      continue-on-error: true

    - name: Select Xcode version
      run: |
        if [ -d "/Applications/Xcode_16.4.app/Contents/Developer" ]; then
          sudo xcode-select -s /Applications/Xcode_16.4.app/Contents/Developer
        else
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        fi
      continue-on-error: true

    - name: Show Xcode version
      run: xcodebuild -version

    - name: Show available simulators
      run: xcrun simctl list devices available

    - name: Cache DerivedData
      uses: actions/cache@v4
      with:
        path: "~/Library/Developer/Xcode/DerivedData"
        key: ${{ runner.os }}-derived-data-${{ hashFiles('**/*.xcodeproj', '**/*.xcworkspace', '**/*.pbxproj') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-

    - name: Boot Simulator
      run: |
        xcrun simctl boot "iPhone 16 Pro Max" || true
      continue-on-error: true

    - name: Build and Test
      run: |
        xcodebuild -verbose \
          -project SubTrackr.xcodeproj \
          -scheme SubTrackr \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=18.0' \
          -derivedDataPath "$HOME/Library/Developer/Xcode/DerivedData" \
          -enableCodeCoverage YES \
          clean test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: "~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult"
        retention-days: 30

    - name: Generate code coverage report
      if: always()
      run: |
        XCRESULT=$(find ~/Library/Developer/Xcode/DerivedData -name "*.xcresult" -type d | head -n 1)
        if [ -n "$XCRESULT" ]; then
          xcrun xccov view --report --json "$XCRESULT" > coverage.json
        else
          echo "No .xcresult file found"
        fi
      continue-on-error: true

    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.json
        flags: ios
        name: SubTrackr iOS Coverage
        fail_ci_if_error: false
